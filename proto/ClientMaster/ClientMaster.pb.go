// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.3
// source: proto/ClientMaster/ClientMaster.proto

package ClientMaster

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// The request message containing the user's name.
type ClientMasterPutReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *ClientMasterPutReq) Reset() {
	*x = ClientMasterPutReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ClientMaster_ClientMaster_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientMasterPutReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientMasterPutReq) ProtoMessage() {}

func (x *ClientMasterPutReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ClientMaster_ClientMaster_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientMasterPutReq.ProtoReflect.Descriptor instead.
func (*ClientMasterPutReq) Descriptor() ([]byte, []int) {
	return file_proto_ClientMaster_ClientMaster_proto_rawDescGZIP(), []int{0}
}

func (x *ClientMasterPutReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type ClientMasterDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *ClientMasterDeleteReq) Reset() {
	*x = ClientMasterDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ClientMaster_ClientMaster_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientMasterDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientMasterDeleteReq) ProtoMessage() {}

func (x *ClientMasterDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ClientMaster_ClientMaster_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientMasterDeleteReq.ProtoReflect.Descriptor instead.
func (*ClientMasterDeleteReq) Descriptor() ([]byte, []int) {
	return file_proto_ClientMaster_ClientMaster_proto_rawDescGZIP(), []int{1}
}

func (x *ClientMasterDeleteReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type ClientMasterReadReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *ClientMasterReadReq) Reset() {
	*x = ClientMasterReadReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ClientMaster_ClientMaster_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientMasterReadReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientMasterReadReq) ProtoMessage() {}

func (x *ClientMasterReadReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ClientMaster_ClientMaster_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientMasterReadReq.ProtoReflect.Descriptor instead.
func (*ClientMasterReadReq) Descriptor() ([]byte, []int) {
	return file_proto_ClientMaster_ClientMaster_proto_rawDescGZIP(), []int{2}
}

func (x *ClientMasterReadReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

// The response message containing the greetings
type ClientMasterPutResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Port string `protobuf:"bytes,1,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *ClientMasterPutResp) Reset() {
	*x = ClientMasterPutResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ClientMaster_ClientMaster_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientMasterPutResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientMasterPutResp) ProtoMessage() {}

func (x *ClientMasterPutResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ClientMaster_ClientMaster_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientMasterPutResp.ProtoReflect.Descriptor instead.
func (*ClientMasterPutResp) Descriptor() ([]byte, []int) {
	return file_proto_ClientMaster_ClientMaster_proto_rawDescGZIP(), []int{3}
}

func (x *ClientMasterPutResp) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

type ClientMasterReadResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Port string `protobuf:"bytes,1,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *ClientMasterReadResp) Reset() {
	*x = ClientMasterReadResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ClientMaster_ClientMaster_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientMasterReadResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientMasterReadResp) ProtoMessage() {}

func (x *ClientMasterReadResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ClientMaster_ClientMaster_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientMasterReadResp.ProtoReflect.Descriptor instead.
func (*ClientMasterReadResp) Descriptor() ([]byte, []int) {
	return file_proto_ClientMaster_ClientMaster_proto_rawDescGZIP(), []int{4}
}

func (x *ClientMasterReadResp) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

type ClientMasterDeleteResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Port string `protobuf:"bytes,1,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *ClientMasterDeleteResp) Reset() {
	*x = ClientMasterDeleteResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ClientMaster_ClientMaster_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientMasterDeleteResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientMasterDeleteResp) ProtoMessage() {}

func (x *ClientMasterDeleteResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ClientMaster_ClientMaster_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientMasterDeleteResp.ProtoReflect.Descriptor instead.
func (*ClientMasterDeleteResp) Descriptor() ([]byte, []int) {
	return file_proto_ClientMaster_ClientMaster_proto_rawDescGZIP(), []int{5}
}

func (x *ClientMasterDeleteResp) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

var File_proto_ClientMaster_ClientMaster_proto protoreflect.FileDescriptor

var file_proto_ClientMaster_ClientMaster_proto_rawDesc = []byte{
	0x0a, 0x25, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x2f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x22, 0x26, 0x0a, 0x12, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x50, 0x75, 0x74, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x29, 0x0a,
	0x15, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x27, 0x0a, 0x13, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x22, 0x29, 0x0a, 0x13, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x50, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x2a, 0x0a, 0x14,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x2c, 0x0a, 0x16, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x32, 0xa8, 0x02, 0x0a, 0x0c, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x12, 0x58, 0x0a, 0x0f, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x50, 0x75, 0x74, 0x12, 0x20, 0x2e, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x50, 0x75, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x50, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x61, 0x0a, 0x12, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x23, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x10, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x12, 0x21, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_ClientMaster_ClientMaster_proto_rawDescOnce sync.Once
	file_proto_ClientMaster_ClientMaster_proto_rawDescData = file_proto_ClientMaster_ClientMaster_proto_rawDesc
)

func file_proto_ClientMaster_ClientMaster_proto_rawDescGZIP() []byte {
	file_proto_ClientMaster_ClientMaster_proto_rawDescOnce.Do(func() {
		file_proto_ClientMaster_ClientMaster_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_ClientMaster_ClientMaster_proto_rawDescData)
	})
	return file_proto_ClientMaster_ClientMaster_proto_rawDescData
}

var file_proto_ClientMaster_ClientMaster_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_proto_ClientMaster_ClientMaster_proto_goTypes = []interface{}{
	(*ClientMasterPutReq)(nil),     // 0: ClientMaster.ClientMasterPutReq
	(*ClientMasterDeleteReq)(nil),  // 1: ClientMaster.ClientMasterDeleteReq
	(*ClientMasterReadReq)(nil),    // 2: ClientMaster.ClientMasterReadReq
	(*ClientMasterPutResp)(nil),    // 3: ClientMaster.ClientMasterPutResp
	(*ClientMasterReadResp)(nil),   // 4: ClientMaster.ClientMasterReadResp
	(*ClientMasterDeleteResp)(nil), // 5: ClientMaster.ClientMasterDeleteResp
}
var file_proto_ClientMaster_ClientMaster_proto_depIdxs = []int32{
	0, // 0: ClientMaster.ClientMaster.ClientMasterPut:input_type -> ClientMaster.ClientMasterPutReq
	1, // 1: ClientMaster.ClientMaster.ClientMasterDelete:input_type -> ClientMaster.ClientMasterDeleteReq
	2, // 2: ClientMaster.ClientMaster.ClientMasterRead:input_type -> ClientMaster.ClientMasterReadReq
	3, // 3: ClientMaster.ClientMaster.ClientMasterPut:output_type -> ClientMaster.ClientMasterPutResp
	5, // 4: ClientMaster.ClientMaster.ClientMasterDelete:output_type -> ClientMaster.ClientMasterDeleteResp
	4, // 5: ClientMaster.ClientMaster.ClientMasterRead:output_type -> ClientMaster.ClientMasterReadResp
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_ClientMaster_ClientMaster_proto_init() }
func file_proto_ClientMaster_ClientMaster_proto_init() {
	if File_proto_ClientMaster_ClientMaster_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_ClientMaster_ClientMaster_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientMasterPutReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ClientMaster_ClientMaster_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientMasterDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ClientMaster_ClientMaster_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientMasterReadReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ClientMaster_ClientMaster_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientMasterPutResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ClientMaster_ClientMaster_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientMasterReadResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ClientMaster_ClientMaster_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientMasterDeleteResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_ClientMaster_ClientMaster_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_ClientMaster_ClientMaster_proto_goTypes,
		DependencyIndexes: file_proto_ClientMaster_ClientMaster_proto_depIdxs,
		MessageInfos:      file_proto_ClientMaster_ClientMaster_proto_msgTypes,
	}.Build()
	File_proto_ClientMaster_ClientMaster_proto = out.File
	file_proto_ClientMaster_ClientMaster_proto_rawDesc = nil
	file_proto_ClientMaster_ClientMaster_proto_goTypes = nil
	file_proto_ClientMaster_ClientMaster_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ClientMasterClient is the client API for ClientMaster service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ClientMasterClient interface {
	// Sends a greeting
	ClientMasterPut(ctx context.Context, in *ClientMasterPutReq, opts ...grpc.CallOption) (*ClientMasterPutResp, error)
	ClientMasterDelete(ctx context.Context, in *ClientMasterDeleteReq, opts ...grpc.CallOption) (*ClientMasterDeleteResp, error)
	ClientMasterRead(ctx context.Context, in *ClientMasterReadReq, opts ...grpc.CallOption) (*ClientMasterReadResp, error)
}

type clientMasterClient struct {
	cc grpc.ClientConnInterface
}

func NewClientMasterClient(cc grpc.ClientConnInterface) ClientMasterClient {
	return &clientMasterClient{cc}
}

func (c *clientMasterClient) ClientMasterPut(ctx context.Context, in *ClientMasterPutReq, opts ...grpc.CallOption) (*ClientMasterPutResp, error) {
	out := new(ClientMasterPutResp)
	err := c.cc.Invoke(ctx, "/ClientMaster.ClientMaster/ClientMasterPut", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientMasterClient) ClientMasterDelete(ctx context.Context, in *ClientMasterDeleteReq, opts ...grpc.CallOption) (*ClientMasterDeleteResp, error) {
	out := new(ClientMasterDeleteResp)
	err := c.cc.Invoke(ctx, "/ClientMaster.ClientMaster/ClientMasterDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientMasterClient) ClientMasterRead(ctx context.Context, in *ClientMasterReadReq, opts ...grpc.CallOption) (*ClientMasterReadResp, error) {
	out := new(ClientMasterReadResp)
	err := c.cc.Invoke(ctx, "/ClientMaster.ClientMaster/ClientMasterRead", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ClientMasterServer is the server API for ClientMaster service.
type ClientMasterServer interface {
	// Sends a greeting
	ClientMasterPut(context.Context, *ClientMasterPutReq) (*ClientMasterPutResp, error)
	ClientMasterDelete(context.Context, *ClientMasterDeleteReq) (*ClientMasterDeleteResp, error)
	ClientMasterRead(context.Context, *ClientMasterReadReq) (*ClientMasterReadResp, error)
}

// UnimplementedClientMasterServer can be embedded to have forward compatible implementations.
type UnimplementedClientMasterServer struct {
}

func (*UnimplementedClientMasterServer) ClientMasterPut(context.Context, *ClientMasterPutReq) (*ClientMasterPutResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClientMasterPut not implemented")
}
func (*UnimplementedClientMasterServer) ClientMasterDelete(context.Context, *ClientMasterDeleteReq) (*ClientMasterDeleteResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClientMasterDelete not implemented")
}
func (*UnimplementedClientMasterServer) ClientMasterRead(context.Context, *ClientMasterReadReq) (*ClientMasterReadResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClientMasterRead not implemented")
}

func RegisterClientMasterServer(s *grpc.Server, srv ClientMasterServer) {
	s.RegisterService(&_ClientMaster_serviceDesc, srv)
}

func _ClientMaster_ClientMasterPut_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClientMasterPutReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientMasterServer).ClientMasterPut(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ClientMaster.ClientMaster/ClientMasterPut",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientMasterServer).ClientMasterPut(ctx, req.(*ClientMasterPutReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientMaster_ClientMasterDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClientMasterDeleteReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientMasterServer).ClientMasterDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ClientMaster.ClientMaster/ClientMasterDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientMasterServer).ClientMasterDelete(ctx, req.(*ClientMasterDeleteReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientMaster_ClientMasterRead_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClientMasterReadReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientMasterServer).ClientMasterRead(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ClientMaster.ClientMaster/ClientMasterRead",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientMasterServer).ClientMasterRead(ctx, req.(*ClientMasterReadReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _ClientMaster_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ClientMaster.ClientMaster",
	HandlerType: (*ClientMasterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ClientMasterPut",
			Handler:    _ClientMaster_ClientMasterPut_Handler,
		},
		{
			MethodName: "ClientMasterDelete",
			Handler:    _ClientMaster_ClientMasterDelete_Handler,
		},
		{
			MethodName: "ClientMasterRead",
			Handler:    _ClientMaster_ClientMasterRead_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/ClientMaster/ClientMaster.proto",
}
